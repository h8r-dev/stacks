# Default values for gin-next.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nocalhost:
  backend:
    dev:
      gitUrl: ""
    annotations: 
      path: conf/nocalhost.yaml
  frontend:
    dev:
      gitUrl: ""
    annotations: 
      path: conf/nocalhost-front.yaml

replicaCount: 1

image:
  repository: ghcr.io/h8r-dev/stack-hub
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "main"

frontImage:
  repository: ghcr.io/h8r-dev/stack-hub
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "main"

imagePullSecrets: 
  - name: h8r-secret
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8000
  targetPort: 8000

ingress:
  enabled: true
  className: "nginx"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: dev.go-gin.h8r.app
      paths:
        - path: /
          serviceName: xxx-front
          servicePort: 80
        - path: /api
          serviceName: xxx
          servicePort: 8000
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

mariadb:
  #commonAnnotations: {"helm.sh/hook": "pre-install", "helm.sh/hook-weight": "-2"}
  auth:
    rootPassword: root
  primary:
    persistence:
      enabled: false
  initdbScripts:
    createdb.sql: |
      SET FOREIGN_KEY_CHECKS=0;

      CREATE DATABASE IF NOT EXISTS `blog`;

      USE `blog`
      -- ----------------------------
      -- Table structure for blog_article
      -- ----------------------------
      DROP TABLE IF EXISTS `blog_article`;
      CREATE TABLE `blog_article` (
        `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
        `tag_id` int(10) unsigned DEFAULT '0' COMMENT '标签ID',
        `title` varchar(100) DEFAULT '' COMMENT '文章标题',
        `desc` varchar(255) DEFAULT '' COMMENT '简述',
        `content` text COMMENT '内容',
        `cover_image_url` varchar(255) DEFAULT '' COMMENT '封面图片地址',
        `created_on` int(10) unsigned DEFAULT '0' COMMENT '新建时间',
        `created_by` varchar(100) DEFAULT '' COMMENT '创建人',
        `modified_on` int(10) unsigned DEFAULT '0' COMMENT '修改时间',
        `modified_by` varchar(255) DEFAULT '' COMMENT '修改人',
        `deleted_on` int(10) unsigned DEFAULT '0',
        `state` tinyint(3) unsigned DEFAULT '1' COMMENT '删除时间',
        PRIMARY KEY (`id`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='文章管理';

      -- ----------------------------
      -- Table structure for blog_auth
      -- ----------------------------
      DROP TABLE IF EXISTS `blog_auth`;
      CREATE TABLE `blog_auth` (
        `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
        `username` varchar(50) DEFAULT '' COMMENT '账号',
        `password` varchar(50) DEFAULT '' COMMENT '密码',
        PRIMARY KEY (`id`)
      ) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

      INSERT INTO `blog_auth` (`id`, `username`, `password`) VALUES ('1', 'test', 'test123');

      -- ----------------------------
      -- Table structure for blog_tag
      -- ----------------------------
      DROP TABLE IF EXISTS `blog_tag`;
      CREATE TABLE `blog_tag` (
        `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
        `name` varchar(100) DEFAULT '' COMMENT '标签名称',
        `created_on` int(10) unsigned DEFAULT '0' COMMENT '创建时间',
        `created_by` varchar(100) DEFAULT '' COMMENT '创建人',
        `modified_on` int(10) unsigned DEFAULT '0' COMMENT '修改时间',
        `modified_by` varchar(100) DEFAULT '' COMMENT '修改人',
        `deleted_on` int(10) unsigned DEFAULT '0' COMMENT '删除时间',
        `state` tinyint(3) unsigned DEFAULT '1' COMMENT '状态 0为禁用、1为启用',
        PRIMARY KEY (`id`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='文章标签管理';

redis:
  replica:
    replicaCount: 1
  auth:
    password: root
  master:
    persistence:
      enabled: false
  replica:
    persistence:
      enabled: false
