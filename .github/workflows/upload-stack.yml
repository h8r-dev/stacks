# This is a basic workflow to help you get started with Actions

name: Upload to S3

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          
      # Runs a single command using the runners shell
      - name: Install coscmd
        run: pip install coscmd
        
      - name: "Set up dagger"
        uses: dagger/dagger-for-github@v2
        with:
          install-only: true
          version: 0.2.7

      # Runs a set of commands using the runners shell
      - name: Upload stacks to S3
        run: |
          rm -rf .git
          rm -rf .github
          coscmd config -a ${{ secrets.TENCENT_SECRET_ID }} -s ${{ secrets.TENCENT_SECRET_KEY }} -b h8r-stack-1309519128 -r ap-hongkong --retry 5
          make tar
          make update-index
          make pack-infra
          cd tars
          ls
          coscmd upload -r --delete -y . .
      - name: Install tccli
        run: |
          sudo pip install tccli

      - name: Config tccli
        env:
          SECRET_ID: ${{ secrets.TCLOUD_API_ID }}
          SECRET_KEY: ${{ secrets.TCLOUD_API_KEY }}
          BUCKET: h8r-stack-1309519128
          REGION: ap-hongkong
        run: |
          coscmd config -a $SECRET_ID -s $SECRET_KEY -b $BUCKET -r $REGION
          tccli configure set secretId $SECRET_ID
          tccli configure set secretKey $SECRET_KEY
          tccli configure set region $REGION

      - name: Flush CDN
        run: |
          tccli cdn PurgePathCache --cli-unfold-argument --Paths https://stack.h8r.io --FlushType flush
