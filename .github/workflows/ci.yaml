name: CI

on:
  pull_request:
    branches:
      - main
  pull_request_target:
    branches:
      - main
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  test-stack:
    # Run workflow pull_request if it is not a fork.
    # As pull_request_target if it is a fork.
    if: >-
      ( github.event_name == 'pull_request_target' && github.event.pull_request.head.repo.fork == true ) ||
      ( github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == false ) ||
      ( github.event_name == 'schedule' )
    strategy:
      matrix:
        stacks:
          # Add stack here if you want to test it.
          - gin-next
          - gin-vue
          - spring-vue
          - sample
          - dotnet-react-dapr
        network:
          - default
          - china_network
    runs-on: ubuntu-latest
    env:
      stack: ${{ matrix.stacks }}
      network: ${{ matrix.network }}
      stack_prefix: "official-stack/"
    steps:
      - name: Check out merge
        if: github.event_name == 'pull_request_target'
        uses: actions/checkout@v3
        with:
          ref: "refs/pull/${{ github.event.number }}/merge"

      - name: Check out
        if: github.event_name != 'pull_request_target'
        uses: actions/checkout@v3

      - name: Create Kind Cluster
        uses: helm/kind-action@deab45fc8df9de5090a604e8ec11778eea7170bd
        with:
          config: "./scripts/kind-config.yaml"
          version: "v0.12.0"
          kubectl_version: "v1.23.4"

      - name: Install Ingress Controller
        run: |
          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml

      - name: Install hln
        run: |
          base_url=https://dl.h8r.io/hln/releases
          export HLN_VERSION=$(curl -s ${base_url}/latest_version)
          export HLN_TARBALL="heighliner_v${HLN_VERSION}_linux_amd64.tar.gz"
          echo "Installing hln, version $HLN_VERSION"
          curl -L ${base_url}/${HLN_VERSION}/${HLN_TARBALL} | sudo tar zxf - -C /usr/local/bin
          hln version

      - name: hln init
        run: |
          hln init

      - name: Stacks Cue Vendor
        run: |
          make vendor

      - name: hln up
        id: hln_up
        env:
          STACK: ${{ env.stack }}
          NETWORK_TYPE: ${{ env.network }}
          STACK_PREFIX: ${{ env.stack_prefix }}
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          ORGANIZATION: heigliner-robot
          HLN_LOG_LEVEL: "debug"
          HLN_LOG_FORMAT: "plain"
          REPO_VISIBILITY: "public"
        run: |
          export APP_NAME="$STACK-$NETWORK_TYPE-$(date +'%Y-%m-%dt%H-%M-%S' -d '+8 hour')"
          echo "::set-output name=app_name::$APP_NAME"
          hln up $APP_NAME --dir "${STACK_PREFIX}${STACK}"

      - name: Setup Go
        if: always()
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Run Ginkgo Tests
        env:
          APP_NAME: ${{ steps.hln_up.outputs.app_name }}
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          ORGANIZATION: heigliner-robot
          STACK: ${{ env.stack }}
          STACK_PREFIX: ${{ env.stack_prefix }}
        run: |
          go install -mod=mod github.com/onsi/ginkgo/v2/ginkgo
          ginkgo "${STACK_PREFIX}${STACK}/test"

      # cleanup GitHub repositories and packages
      - name: Cleanup
        if: always()
        env:
          APP_NAME: ${{ steps.hln_up.outputs.app_name }}
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          ORGANIZATION: heigliner-robot
          STACK: ${{ env.stack }}
          STACK_PREFIX: ${{ env.stack_prefix }}
        run: |
          go install github.com/yuyicai/gh-cleaner@latest
          export REPOS="${APP_NAME}-backend,${APP_NAME}-frontend,${APP_NAME}-deploy"
          export PKGS="${APP_NAME}-backend,${APP_NAME}-frontend"
          gh-cleaner delete -r ${REPOS} -p ${PKGS} -u ${ORGANIZATION}
